"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. 
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
 Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
 При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. 
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число. 
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class NumbInListError(Exception): 
    def __init__(self, txt):
        self.txt = txt



def validate_el(el):
    if not str(el).isdigit():
        raise NumbInListError("Введенный элемент не является числом")
    else:
        return el

lst = []

while True:
    user_input = input("Введите число списка или нажмите Enter для завершения программы: ")
    if user_input == "":
        print(lst)
        break
    try:
        lst.append(validate_el(user_input))
    except NumbInListError as err:
        print(err)

   
